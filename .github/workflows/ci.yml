name: CI

on:
  push:
    branches: [main, master, develop]
  pull_request:

env:
  NODE_VERSION: '20'

jobs:
  backend-ci:
    name: Backend CI
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    env:
      DATABASE_HOST: localhost
      DATABASE_PORT: 5432
      DATABASE_USER: postgres
      DATABASE_PASSWORD: postgres
      DATABASE_NAME: test_db
      JWT_SECRET: test_secret
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run Backend Lint
        run: npm run lint -w backend
      - name: Run Backend Tests
        run: npm run test -w backend

  frontend-ci:
    name: Frontend CI
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run Frontend Lint
        run: npm run lint -w frontend
      - name: Run Frontend Tests
        run: npm run test -w frontend
      - name: Check Frontend Build
        run: npm run build -w frontend
        env:
          # Mock da URL da API para o build passar
          NEXT_PUBLIC_API_URL: http://localhost:3000